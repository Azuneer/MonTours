version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: montours-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-montours}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - montours-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: montours-api
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-montours}
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
      APP_NAME: ${APP_NAME:-MonTours API}
      APP_VERSION: ${APP_VERSION:-1.0.0}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./drizzle:/app/drizzle
    command: bun run dev
    networks:
      - montours-network

volumes:
  postgres_data:
    driver: local

networks:
  montours-network:
    driver: bridge
